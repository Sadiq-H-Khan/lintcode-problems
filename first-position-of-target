class Solution {
    /**
     * @param nums: The integer array.
     * @param target: Target to find.
     * @return: The first position of target. Position starts from 0.
     */
    public int binarySearch(int[] nums, int target) {
        //write your code here
        int size = nums.length, m = 0, l = 0, r = size;
        while(r - l > 1) {
            m = l + (r-l)/2; 
            if(nums[m] <= target)
                    l = m;
            else    r = m;
        }
        while(m != 0 && nums[m-1] == target)
            m--;
        if(nums[m] == target)
            return m;
        else return -1;
    }
}


class Solution {
    /**
     * @param nums: The integer array.
     * @param target: Target to find.
     * @return: The first position of target. Position starts from 0.
     */
    public int binarySearch(int[] nums, int target) {
        //write your code here
        int size = nums.length, m = 0, l = -1, r = size-1;
        while(r - l > 1) {
            m = l + (r-l)/2;
            if(nums[m] >= target)
                    r = m;
            else    l = m;
             
        }
        if(nums[r] == target)
            return r;
        else return -1;
    }
}
